/*
 * ZDB Copyright 2017 Regents of the University of Michigan
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

#include <gtest/gtest.h>

#include "certificate_sharder.h"
#include "domain_sharder.h"
#include "ipv4_sharder.h"
#include "sharder.h"

namespace zdb {

TEST(IPv4SharderTest, TestShardFor) {
    IPv4Sharder s;
    EXPECT_EQ(0, s.shard_for(IPv4Key(0x10111200, 0, 0, 0)));
    EXPECT_EQ(1, s.shard_for(IPv4Key(0x11121301, 0, 0, 0)));
    EXPECT_EQ(2, s.shard_for(IPv4Key(0x11121302, 0, 0, 0)));
    EXPECT_EQ(3, s.shard_for(IPv4Key(0x11121303, 0, 0, 0)));
    EXPECT_EQ(4, s.shard_for(IPv4Key(0x11121304, 0, 0, 0)));
    EXPECT_EQ(5, s.shard_for(IPv4Key(0x11121305, 0, 0, 0)));
    EXPECT_EQ(6, s.shard_for(IPv4Key(0x11121306, 0, 0, 0)));
    EXPECT_EQ(7, s.shard_for(IPv4Key(0x11121307, 0, 0, 0)));
    EXPECT_EQ(8, s.shard_for(IPv4Key(0x11121308, 0, 0, 0)));
    EXPECT_EQ(9, s.shard_for(IPv4Key(0x11121309, 0, 0, 0)));
    EXPECT_EQ(10, s.shard_for(IPv4Key(0x1112130A, 0, 0, 0)));
    EXPECT_EQ(11, s.shard_for(IPv4Key(0x1112130B, 0, 0, 0)));
    EXPECT_EQ(12, s.shard_for(IPv4Key(0x1112130C, 0, 0, 0)));
    EXPECT_EQ(13, s.shard_for(IPv4Key(0x1112130D, 0, 0, 0)));
    EXPECT_EQ(14, s.shard_for(IPv4Key(0x1112130E, 0, 0, 0)));
    EXPECT_EQ(15, s.shard_for(IPv4Key(0x1112130F, 0, 0, 0)));
    EXPECT_EQ(16, s.shard_for(IPv4Key(0x11121310, 0, 0, 0)));
    EXPECT_EQ(17, s.shard_for(IPv4Key(0x11121311, 0, 0, 0)));
    EXPECT_EQ(18, s.shard_for(IPv4Key(0x11121312, 0, 0, 0)));
    EXPECT_EQ(19, s.shard_for(IPv4Key(0x11121313, 0, 0, 0)));
    EXPECT_EQ(20, s.shard_for(IPv4Key(0x11121314, 0, 0, 0)));
    EXPECT_EQ(21, s.shard_for(IPv4Key(0x11121315, 0, 0, 0)));
    EXPECT_EQ(22, s.shard_for(IPv4Key(0x11121316, 0, 0, 0)));
    EXPECT_EQ(23, s.shard_for(IPv4Key(0x11121317, 0, 0, 0)));
    EXPECT_EQ(24, s.shard_for(IPv4Key(0x11121318, 0, 0, 0)));
    EXPECT_EQ(25, s.shard_for(IPv4Key(0x11121319, 0, 0, 0)));
    EXPECT_EQ(26, s.shard_for(IPv4Key(0x1112131A, 0, 0, 0)));
    EXPECT_EQ(27, s.shard_for(IPv4Key(0x1112131B, 0, 0, 0)));
    EXPECT_EQ(28, s.shard_for(IPv4Key(0x1112131C, 0, 0, 0)));
    EXPECT_EQ(29, s.shard_for(IPv4Key(0x1112131D, 0, 0, 0)));
    EXPECT_EQ(30, s.shard_for(IPv4Key(0x1112131E, 0, 0, 0)));
    EXPECT_EQ(31, s.shard_for(IPv4Key(0x1112131F, 0, 0, 0)));
    EXPECT_EQ(32, s.shard_for(IPv4Key(0x11121320, 0, 0, 0)));
    EXPECT_EQ(33, s.shard_for(IPv4Key(0x11121321, 0, 0, 0)));
    EXPECT_EQ(34, s.shard_for(IPv4Key(0x11121322, 0, 0, 0)));
    EXPECT_EQ(35, s.shard_for(IPv4Key(0x11121323, 0, 0, 0)));
    EXPECT_EQ(36, s.shard_for(IPv4Key(0x11121324, 0, 0, 0)));
    EXPECT_EQ(37, s.shard_for(IPv4Key(0x11121325, 0, 0, 0)));
    EXPECT_EQ(38, s.shard_for(IPv4Key(0x11121326, 0, 0, 0)));
    EXPECT_EQ(39, s.shard_for(IPv4Key(0x11121327, 0, 0, 0)));
    EXPECT_EQ(40, s.shard_for(IPv4Key(0x11121328, 0, 0, 0)));
    EXPECT_EQ(41, s.shard_for(IPv4Key(0x11121329, 0, 0, 0)));
    EXPECT_EQ(42, s.shard_for(IPv4Key(0x1112132A, 0, 0, 0)));
    EXPECT_EQ(43, s.shard_for(IPv4Key(0x1112132B, 0, 0, 0)));
    EXPECT_EQ(44, s.shard_for(IPv4Key(0x1112132C, 0, 0, 0)));
    EXPECT_EQ(45, s.shard_for(IPv4Key(0x1112132D, 0, 0, 0)));
    EXPECT_EQ(46, s.shard_for(IPv4Key(0x1112132E, 0, 0, 0)));
    EXPECT_EQ(47, s.shard_for(IPv4Key(0x1112132F, 0, 0, 0)));
    EXPECT_EQ(48, s.shard_for(IPv4Key(0x11121330, 0, 0, 0)));
    EXPECT_EQ(49, s.shard_for(IPv4Key(0x11121331, 0, 0, 0)));
    EXPECT_EQ(50, s.shard_for(IPv4Key(0x11121332, 0, 0, 0)));
    EXPECT_EQ(51, s.shard_for(IPv4Key(0x11121333, 0, 0, 0)));
    EXPECT_EQ(52, s.shard_for(IPv4Key(0x11121334, 0, 0, 0)));
    EXPECT_EQ(53, s.shard_for(IPv4Key(0x11121335, 0, 0, 0)));
    EXPECT_EQ(54, s.shard_for(IPv4Key(0x11121336, 0, 0, 0)));
    EXPECT_EQ(55, s.shard_for(IPv4Key(0x11121337, 0, 0, 0)));
    EXPECT_EQ(56, s.shard_for(IPv4Key(0x11121338, 0, 0, 0)));
    EXPECT_EQ(57, s.shard_for(IPv4Key(0x11121339, 0, 0, 0)));
    EXPECT_EQ(58, s.shard_for(IPv4Key(0x1112133A, 0, 0, 0)));
    EXPECT_EQ(59, s.shard_for(IPv4Key(0x1112133B, 0, 0, 0)));
    EXPECT_EQ(60, s.shard_for(IPv4Key(0x1112133C, 0, 0, 0)));
    EXPECT_EQ(61, s.shard_for(IPv4Key(0x1112133D, 0, 0, 0)));
    EXPECT_EQ(62, s.shard_for(IPv4Key(0x1112133E, 0, 0, 0)));
    EXPECT_EQ(63, s.shard_for(IPv4Key(0x1112133F, 0, 0, 0)));
    EXPECT_EQ(64, s.shard_for(IPv4Key(0x11121340, 0, 0, 0)));
    EXPECT_EQ(65, s.shard_for(IPv4Key(0x11121341, 0, 0, 0)));
    EXPECT_EQ(66, s.shard_for(IPv4Key(0x11121342, 0, 0, 0)));
    EXPECT_EQ(67, s.shard_for(IPv4Key(0x11121343, 0, 0, 0)));
    EXPECT_EQ(68, s.shard_for(IPv4Key(0x11121344, 0, 0, 0)));
    EXPECT_EQ(69, s.shard_for(IPv4Key(0x11121345, 0, 0, 0)));
    EXPECT_EQ(70, s.shard_for(IPv4Key(0x11121346, 0, 0, 0)));
    EXPECT_EQ(71, s.shard_for(IPv4Key(0x11121347, 0, 0, 0)));
    EXPECT_EQ(72, s.shard_for(IPv4Key(0x11121348, 0, 0, 0)));
    EXPECT_EQ(73, s.shard_for(IPv4Key(0x11121349, 0, 0, 0)));
    EXPECT_EQ(74, s.shard_for(IPv4Key(0x1112134A, 0, 0, 0)));
    EXPECT_EQ(75, s.shard_for(IPv4Key(0x1112134B, 0, 0, 0)));
    EXPECT_EQ(76, s.shard_for(IPv4Key(0x1112134C, 0, 0, 0)));
    EXPECT_EQ(77, s.shard_for(IPv4Key(0x1112134D, 0, 0, 0)));
    EXPECT_EQ(78, s.shard_for(IPv4Key(0x1112134E, 0, 0, 0)));
    EXPECT_EQ(79, s.shard_for(IPv4Key(0x1112134F, 0, 0, 0)));
    EXPECT_EQ(80, s.shard_for(IPv4Key(0x11121350, 0, 0, 0)));
    EXPECT_EQ(81, s.shard_for(IPv4Key(0x11121351, 0, 0, 0)));
    EXPECT_EQ(82, s.shard_for(IPv4Key(0x11121352, 0, 0, 0)));
    EXPECT_EQ(83, s.shard_for(IPv4Key(0x11121353, 0, 0, 0)));
    EXPECT_EQ(84, s.shard_for(IPv4Key(0x11121354, 0, 0, 0)));
    EXPECT_EQ(85, s.shard_for(IPv4Key(0x11121355, 0, 0, 0)));
    EXPECT_EQ(86, s.shard_for(IPv4Key(0x11121356, 0, 0, 0)));
    EXPECT_EQ(87, s.shard_for(IPv4Key(0x11121357, 0, 0, 0)));
    EXPECT_EQ(88, s.shard_for(IPv4Key(0x11121358, 0, 0, 0)));
    EXPECT_EQ(89, s.shard_for(IPv4Key(0x11121359, 0, 0, 0)));
    EXPECT_EQ(90, s.shard_for(IPv4Key(0x1112135A, 0, 0, 0)));
    EXPECT_EQ(91, s.shard_for(IPv4Key(0x1112135B, 0, 0, 0)));
    EXPECT_EQ(92, s.shard_for(IPv4Key(0x1112135C, 0, 0, 0)));
    EXPECT_EQ(93, s.shard_for(IPv4Key(0x1112135D, 0, 0, 0)));
    EXPECT_EQ(94, s.shard_for(IPv4Key(0x1112135E, 0, 0, 0)));
    EXPECT_EQ(95, s.shard_for(IPv4Key(0x1112135F, 0, 0, 0)));
    EXPECT_EQ(96, s.shard_for(IPv4Key(0x11121360, 0, 0, 0)));
    EXPECT_EQ(97, s.shard_for(IPv4Key(0x11121361, 0, 0, 0)));
    EXPECT_EQ(98, s.shard_for(IPv4Key(0x11121362, 0, 0, 0)));
    EXPECT_EQ(99, s.shard_for(IPv4Key(0x11121363, 0, 0, 0)));
    EXPECT_EQ(100, s.shard_for(IPv4Key(0x11121364, 0, 0, 0)));
    EXPECT_EQ(101, s.shard_for(IPv4Key(0x11121365, 0, 0, 0)));
    EXPECT_EQ(102, s.shard_for(IPv4Key(0x11121366, 0, 0, 0)));
    EXPECT_EQ(103, s.shard_for(IPv4Key(0x11121367, 0, 0, 0)));
    EXPECT_EQ(104, s.shard_for(IPv4Key(0x11121368, 0, 0, 0)));
    EXPECT_EQ(105, s.shard_for(IPv4Key(0x11121369, 0, 0, 0)));
    EXPECT_EQ(106, s.shard_for(IPv4Key(0x1112136A, 0, 0, 0)));
    EXPECT_EQ(107, s.shard_for(IPv4Key(0x1112136B, 0, 0, 0)));
    EXPECT_EQ(108, s.shard_for(IPv4Key(0x1112136C, 0, 0, 0)));
    EXPECT_EQ(109, s.shard_for(IPv4Key(0x1112136D, 0, 0, 0)));
    EXPECT_EQ(110, s.shard_for(IPv4Key(0x1112136E, 0, 0, 0)));
    EXPECT_EQ(111, s.shard_for(IPv4Key(0x1112136F, 0, 0, 0)));
    EXPECT_EQ(112, s.shard_for(IPv4Key(0x11121370, 0, 0, 0)));
    EXPECT_EQ(113, s.shard_for(IPv4Key(0x11121371, 0, 0, 0)));
    EXPECT_EQ(114, s.shard_for(IPv4Key(0x11121372, 0, 0, 0)));
    EXPECT_EQ(115, s.shard_for(IPv4Key(0x11121373, 0, 0, 0)));
    EXPECT_EQ(116, s.shard_for(IPv4Key(0x11121374, 0, 0, 0)));
    EXPECT_EQ(117, s.shard_for(IPv4Key(0x11121375, 0, 0, 0)));
    EXPECT_EQ(118, s.shard_for(IPv4Key(0x11121376, 0, 0, 0)));
    EXPECT_EQ(119, s.shard_for(IPv4Key(0x11121377, 0, 0, 0)));
    EXPECT_EQ(120, s.shard_for(IPv4Key(0x11121378, 0, 0, 0)));
    EXPECT_EQ(121, s.shard_for(IPv4Key(0x11121379, 0, 0, 0)));
    EXPECT_EQ(122, s.shard_for(IPv4Key(0x1112137A, 0, 0, 0)));
    EXPECT_EQ(123, s.shard_for(IPv4Key(0x1112137B, 0, 0, 0)));
    EXPECT_EQ(124, s.shard_for(IPv4Key(0x1112137C, 0, 0, 0)));
    EXPECT_EQ(125, s.shard_for(IPv4Key(0x1112137D, 0, 0, 0)));
    EXPECT_EQ(126, s.shard_for(IPv4Key(0x1112137E, 0, 0, 0)));
    EXPECT_EQ(127, s.shard_for(IPv4Key(0x1112137F, 0, 0, 0)));
    EXPECT_EQ(128, s.shard_for(IPv4Key(0x11121380, 0, 0, 0)));
    EXPECT_EQ(129, s.shard_for(IPv4Key(0x11121381, 0, 0, 0)));
    EXPECT_EQ(130, s.shard_for(IPv4Key(0x11121382, 0, 0, 0)));
    EXPECT_EQ(131, s.shard_for(IPv4Key(0x11121383, 0, 0, 0)));
    EXPECT_EQ(132, s.shard_for(IPv4Key(0x11121384, 0, 0, 0)));
    EXPECT_EQ(133, s.shard_for(IPv4Key(0x11121385, 0, 0, 0)));
    EXPECT_EQ(134, s.shard_for(IPv4Key(0x11121386, 0, 0, 0)));
    EXPECT_EQ(135, s.shard_for(IPv4Key(0x11121387, 0, 0, 0)));
    EXPECT_EQ(136, s.shard_for(IPv4Key(0x11121388, 0, 0, 0)));
    EXPECT_EQ(137, s.shard_for(IPv4Key(0x11121389, 0, 0, 0)));
    EXPECT_EQ(138, s.shard_for(IPv4Key(0x1112138A, 0, 0, 0)));
    EXPECT_EQ(139, s.shard_for(IPv4Key(0x1112138B, 0, 0, 0)));
    EXPECT_EQ(140, s.shard_for(IPv4Key(0x1112138C, 0, 0, 0)));
    EXPECT_EQ(141, s.shard_for(IPv4Key(0x1112138D, 0, 0, 0)));
    EXPECT_EQ(142, s.shard_for(IPv4Key(0x1112138E, 0, 0, 0)));
    EXPECT_EQ(143, s.shard_for(IPv4Key(0x1112138F, 0, 0, 0)));
    EXPECT_EQ(144, s.shard_for(IPv4Key(0x11121390, 0, 0, 0)));
    EXPECT_EQ(145, s.shard_for(IPv4Key(0x11121391, 0, 0, 0)));
    EXPECT_EQ(146, s.shard_for(IPv4Key(0x11121392, 0, 0, 0)));
    EXPECT_EQ(147, s.shard_for(IPv4Key(0x11121393, 0, 0, 0)));
    EXPECT_EQ(148, s.shard_for(IPv4Key(0x11121394, 0, 0, 0)));
    EXPECT_EQ(149, s.shard_for(IPv4Key(0x11121395, 0, 0, 0)));
    EXPECT_EQ(150, s.shard_for(IPv4Key(0x11121396, 0, 0, 0)));
    EXPECT_EQ(151, s.shard_for(IPv4Key(0x11121397, 0, 0, 0)));
    EXPECT_EQ(152, s.shard_for(IPv4Key(0x11121398, 0, 0, 0)));
    EXPECT_EQ(153, s.shard_for(IPv4Key(0x11121399, 0, 0, 0)));
    EXPECT_EQ(154, s.shard_for(IPv4Key(0x1112139A, 0, 0, 0)));
    EXPECT_EQ(155, s.shard_for(IPv4Key(0x1112139B, 0, 0, 0)));
    EXPECT_EQ(156, s.shard_for(IPv4Key(0x1112139C, 0, 0, 0)));
    EXPECT_EQ(157, s.shard_for(IPv4Key(0x1112139D, 0, 0, 0)));
    EXPECT_EQ(158, s.shard_for(IPv4Key(0x1112139E, 0, 0, 0)));
    EXPECT_EQ(159, s.shard_for(IPv4Key(0x1112139F, 0, 0, 0)));
    EXPECT_EQ(160, s.shard_for(IPv4Key(0x111213A0, 0, 0, 0)));
    EXPECT_EQ(161, s.shard_for(IPv4Key(0x111213A1, 0, 0, 0)));
    EXPECT_EQ(162, s.shard_for(IPv4Key(0x111213A2, 0, 0, 0)));
    EXPECT_EQ(163, s.shard_for(IPv4Key(0x111213A3, 0, 0, 0)));
    EXPECT_EQ(164, s.shard_for(IPv4Key(0x111213A4, 0, 0, 0)));
    EXPECT_EQ(165, s.shard_for(IPv4Key(0x111213A5, 0, 0, 0)));
    EXPECT_EQ(166, s.shard_for(IPv4Key(0x111213A6, 0, 0, 0)));
    EXPECT_EQ(167, s.shard_for(IPv4Key(0x111213A7, 0, 0, 0)));
    EXPECT_EQ(168, s.shard_for(IPv4Key(0x111213A8, 0, 0, 0)));
    EXPECT_EQ(169, s.shard_for(IPv4Key(0x111213A9, 0, 0, 0)));
    EXPECT_EQ(170, s.shard_for(IPv4Key(0x111213AA, 0, 0, 0)));
    EXPECT_EQ(171, s.shard_for(IPv4Key(0x111213AB, 0, 0, 0)));
    EXPECT_EQ(172, s.shard_for(IPv4Key(0x111213AC, 0, 0, 0)));
    EXPECT_EQ(173, s.shard_for(IPv4Key(0x111213AD, 0, 0, 0)));
    EXPECT_EQ(174, s.shard_for(IPv4Key(0x111213AE, 0, 0, 0)));
    EXPECT_EQ(175, s.shard_for(IPv4Key(0x111213AF, 0, 0, 0)));
    EXPECT_EQ(176, s.shard_for(IPv4Key(0x111213B0, 0, 0, 0)));
    EXPECT_EQ(177, s.shard_for(IPv4Key(0x111213B1, 0, 0, 0)));
    EXPECT_EQ(178, s.shard_for(IPv4Key(0x111213B2, 0, 0, 0)));
    EXPECT_EQ(179, s.shard_for(IPv4Key(0x111213B3, 0, 0, 0)));
    EXPECT_EQ(180, s.shard_for(IPv4Key(0x111213B4, 0, 0, 0)));
    EXPECT_EQ(181, s.shard_for(IPv4Key(0x111213B5, 0, 0, 0)));
    EXPECT_EQ(182, s.shard_for(IPv4Key(0x111213B6, 0, 0, 0)));
    EXPECT_EQ(183, s.shard_for(IPv4Key(0x111213B7, 0, 0, 0)));
    EXPECT_EQ(184, s.shard_for(IPv4Key(0x111213B8, 0, 0, 0)));
    EXPECT_EQ(185, s.shard_for(IPv4Key(0x111213B9, 0, 0, 0)));
    EXPECT_EQ(186, s.shard_for(IPv4Key(0x111213BA, 0, 0, 0)));
    EXPECT_EQ(187, s.shard_for(IPv4Key(0x111213BB, 0, 0, 0)));
    EXPECT_EQ(188, s.shard_for(IPv4Key(0x111213BC, 0, 0, 0)));
    EXPECT_EQ(189, s.shard_for(IPv4Key(0x111213BD, 0, 0, 0)));
    EXPECT_EQ(190, s.shard_for(IPv4Key(0x111213BE, 0, 0, 0)));
    EXPECT_EQ(191, s.shard_for(IPv4Key(0x111213BF, 0, 0, 0)));
    EXPECT_EQ(192, s.shard_for(IPv4Key(0x111213C0, 0, 0, 0)));
    EXPECT_EQ(193, s.shard_for(IPv4Key(0x111213C1, 0, 0, 0)));
    EXPECT_EQ(194, s.shard_for(IPv4Key(0x111213C2, 0, 0, 0)));
    EXPECT_EQ(195, s.shard_for(IPv4Key(0x111213C3, 0, 0, 0)));
    EXPECT_EQ(196, s.shard_for(IPv4Key(0x111213C4, 0, 0, 0)));
    EXPECT_EQ(197, s.shard_for(IPv4Key(0x111213C5, 0, 0, 0)));
    EXPECT_EQ(198, s.shard_for(IPv4Key(0x111213C6, 0, 0, 0)));
    EXPECT_EQ(199, s.shard_for(IPv4Key(0x111213C7, 0, 0, 0)));
    EXPECT_EQ(200, s.shard_for(IPv4Key(0x111213C8, 0, 0, 0)));
    EXPECT_EQ(201, s.shard_for(IPv4Key(0x111213C9, 0, 0, 0)));
    EXPECT_EQ(202, s.shard_for(IPv4Key(0x111213CA, 0, 0, 0)));
    EXPECT_EQ(203, s.shard_for(IPv4Key(0x111213CB, 0, 0, 0)));
    EXPECT_EQ(204, s.shard_for(IPv4Key(0x111213CC, 0, 0, 0)));
    EXPECT_EQ(205, s.shard_for(IPv4Key(0x111213CD, 0, 0, 0)));
    EXPECT_EQ(206, s.shard_for(IPv4Key(0x111213CE, 0, 0, 0)));
    EXPECT_EQ(207, s.shard_for(IPv4Key(0x111213CF, 0, 0, 0)));
    EXPECT_EQ(208, s.shard_for(IPv4Key(0x111213D0, 0, 0, 0)));
    EXPECT_EQ(209, s.shard_for(IPv4Key(0x111213D1, 0, 0, 0)));
    EXPECT_EQ(210, s.shard_for(IPv4Key(0x111213D2, 0, 0, 0)));
    EXPECT_EQ(211, s.shard_for(IPv4Key(0x111213D3, 0, 0, 0)));
    EXPECT_EQ(212, s.shard_for(IPv4Key(0x111213D4, 0, 0, 0)));
    EXPECT_EQ(213, s.shard_for(IPv4Key(0x111213D5, 0, 0, 0)));
    EXPECT_EQ(214, s.shard_for(IPv4Key(0x111213D6, 0, 0, 0)));
    EXPECT_EQ(215, s.shard_for(IPv4Key(0x111213D7, 0, 0, 0)));
    EXPECT_EQ(216, s.shard_for(IPv4Key(0x111213D8, 0, 0, 0)));
    EXPECT_EQ(217, s.shard_for(IPv4Key(0x111213D9, 0, 0, 0)));
    EXPECT_EQ(218, s.shard_for(IPv4Key(0x111213DA, 0, 0, 0)));
    EXPECT_EQ(219, s.shard_for(IPv4Key(0x111213DB, 0, 0, 0)));
    EXPECT_EQ(220, s.shard_for(IPv4Key(0x111213DC, 0, 0, 0)));
    EXPECT_EQ(221, s.shard_for(IPv4Key(0x111213DD, 0, 0, 0)));
    EXPECT_EQ(222, s.shard_for(IPv4Key(0x111213DE, 0, 0, 0)));
    EXPECT_EQ(223, s.shard_for(IPv4Key(0x111213DF, 0, 0, 0)));
    EXPECT_EQ(224, s.shard_for(IPv4Key(0x111213E0, 0, 0, 0)));
    EXPECT_EQ(225, s.shard_for(IPv4Key(0x111213E1, 0, 0, 0)));
    EXPECT_EQ(226, s.shard_for(IPv4Key(0x111213E2, 0, 0, 0)));
    EXPECT_EQ(227, s.shard_for(IPv4Key(0x111213E3, 0, 0, 0)));
    EXPECT_EQ(228, s.shard_for(IPv4Key(0x111213E4, 0, 0, 0)));
    EXPECT_EQ(229, s.shard_for(IPv4Key(0x111213E5, 0, 0, 0)));
    EXPECT_EQ(230, s.shard_for(IPv4Key(0x111213E6, 0, 0, 0)));
    EXPECT_EQ(231, s.shard_for(IPv4Key(0x111213E7, 0, 0, 0)));
    EXPECT_EQ(232, s.shard_for(IPv4Key(0x111213E8, 0, 0, 0)));
    EXPECT_EQ(233, s.shard_for(IPv4Key(0x111213E9, 0, 0, 0)));
    EXPECT_EQ(234, s.shard_for(IPv4Key(0x111213EA, 0, 0, 0)));
    EXPECT_EQ(235, s.shard_for(IPv4Key(0x111213EB, 0, 0, 0)));
    EXPECT_EQ(236, s.shard_for(IPv4Key(0x111213EC, 0, 0, 0)));
    EXPECT_EQ(237, s.shard_for(IPv4Key(0x111213ED, 0, 0, 0)));
    EXPECT_EQ(238, s.shard_for(IPv4Key(0x111213EE, 0, 0, 0)));
    EXPECT_EQ(239, s.shard_for(IPv4Key(0x111213EF, 0, 0, 0)));
    EXPECT_EQ(240, s.shard_for(IPv4Key(0x111213F0, 0, 0, 0)));
    EXPECT_EQ(241, s.shard_for(IPv4Key(0x111213F1, 0, 0, 0)));
    EXPECT_EQ(242, s.shard_for(IPv4Key(0x111213F2, 0, 0, 0)));
    EXPECT_EQ(243, s.shard_for(IPv4Key(0x111213F3, 0, 0, 0)));
    EXPECT_EQ(244, s.shard_for(IPv4Key(0x111213F4, 0, 0, 0)));
    EXPECT_EQ(245, s.shard_for(IPv4Key(0x111213F5, 0, 0, 0)));
    EXPECT_EQ(246, s.shard_for(IPv4Key(0x111213F6, 0, 0, 0)));
    EXPECT_EQ(247, s.shard_for(IPv4Key(0x111213F7, 0, 0, 0)));
    EXPECT_EQ(248, s.shard_for(IPv4Key(0x111213F8, 0, 0, 0)));
    EXPECT_EQ(249, s.shard_for(IPv4Key(0x111213F9, 0, 0, 0)));
    EXPECT_EQ(250, s.shard_for(IPv4Key(0x111213FA, 0, 0, 0)));
    EXPECT_EQ(251, s.shard_for(IPv4Key(0x111213FB, 0, 0, 0)));
    EXPECT_EQ(252, s.shard_for(IPv4Key(0x111213FC, 0, 0, 0)));
    EXPECT_EQ(253, s.shard_for(IPv4Key(0x111213FD, 0, 0, 0)));
    EXPECT_EQ(254, s.shard_for(IPv4Key(0x111213FE, 0, 0, 0)));
    EXPECT_EQ(255, s.shard_for(IPv4Key(0x111213FF, 0, 0, 0)));
}

TEST(IPv4SharderTest, TestFirstOf) {
    IPv4Sharder s;
    for (size_t i = 0; i < s.total_shards(); ++i) {
        IPv4Key k = s.first_of(i);
        uint32_t host_ip = htonl(k.ip);
        EXPECT_EQ(host_ip, i << 24);
    }
}

TEST(DomainSharderTest, TestShardFor) {
    DomainSharder s;
    for (int i = 0; i < 256; ++i) {
        char c = static_cast<char>(i);
        const char arr[2] = {c, '\0'};
        std::string domain_name(arr);
        DomainKey k(domain_name, 128, 0, static_cast<uint8_t>(c));
        EXPECT_EQ(0, s.shard_for(k));
    }
}

TEST(CertificateSharderTest, TestShardFor) {
    CertificateSharder s;
    HashKey h;

    uint8_t test_0x00[32] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x00), 32);
    EXPECT_EQ(0, s.shard_for(h));

    uint8_t test_0x01[32] = {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x01), 32);
    EXPECT_EQ(1, s.shard_for(h));

    uint8_t test_0x02[32] = {0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x02), 32);
    EXPECT_EQ(2, s.shard_for(h));

    uint8_t test_0x03[32] = {0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x03), 32);
    EXPECT_EQ(3, s.shard_for(h));

    uint8_t test_0x04[32] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x04), 32);
    EXPECT_EQ(4, s.shard_for(h));

    uint8_t test_0x05[32] = {0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x05), 32);
    EXPECT_EQ(5, s.shard_for(h));

    uint8_t test_0x06[32] = {0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x06), 32);
    EXPECT_EQ(6, s.shard_for(h));

    uint8_t test_0x07[32] = {0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x07), 32);
    EXPECT_EQ(7, s.shard_for(h));

    uint8_t test_0x08[32] = {0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x08), 32);
    EXPECT_EQ(8, s.shard_for(h));

    uint8_t test_0x09[32] = {0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x09), 32);
    EXPECT_EQ(9, s.shard_for(h));

    uint8_t test_0x0A[32] = {0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x0A), 32);
    EXPECT_EQ(10, s.shard_for(h));

    uint8_t test_0x0B[32] = {0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x0B), 32);
    EXPECT_EQ(11, s.shard_for(h));

    uint8_t test_0x0C[32] = {0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x0C), 32);
    EXPECT_EQ(12, s.shard_for(h));

    uint8_t test_0x0D[32] = {0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x0D), 32);
    EXPECT_EQ(13, s.shard_for(h));

    uint8_t test_0x0E[32] = {0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x0E), 32);
    EXPECT_EQ(14, s.shard_for(h));

    uint8_t test_0x0F[32] = {0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x0F), 32);
    EXPECT_EQ(15, s.shard_for(h));

    uint8_t test_0x10[32] = {0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x10), 32);
    EXPECT_EQ(16, s.shard_for(h));

    uint8_t test_0x11[32] = {0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x11), 32);
    EXPECT_EQ(17, s.shard_for(h));

    uint8_t test_0x12[32] = {0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x12), 32);
    EXPECT_EQ(18, s.shard_for(h));

    uint8_t test_0x13[32] = {0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x13), 32);
    EXPECT_EQ(19, s.shard_for(h));

    uint8_t test_0x14[32] = {0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x14), 32);
    EXPECT_EQ(20, s.shard_for(h));

    uint8_t test_0x15[32] = {0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x15), 32);
    EXPECT_EQ(21, s.shard_for(h));

    uint8_t test_0x16[32] = {0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x16), 32);
    EXPECT_EQ(22, s.shard_for(h));

    uint8_t test_0x17[32] = {0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x17), 32);
    EXPECT_EQ(23, s.shard_for(h));

    uint8_t test_0x18[32] = {0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x18), 32);
    EXPECT_EQ(24, s.shard_for(h));

    uint8_t test_0x19[32] = {0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x19), 32);
    EXPECT_EQ(25, s.shard_for(h));

    uint8_t test_0x1A[32] = {0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x1A), 32);
    EXPECT_EQ(26, s.shard_for(h));

    uint8_t test_0x1B[32] = {0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x1B), 32);
    EXPECT_EQ(27, s.shard_for(h));

    uint8_t test_0x1C[32] = {0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x1C), 32);
    EXPECT_EQ(28, s.shard_for(h));

    uint8_t test_0x1D[32] = {0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x1D), 32);
    EXPECT_EQ(29, s.shard_for(h));

    uint8_t test_0x1E[32] = {0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x1E), 32);
    EXPECT_EQ(30, s.shard_for(h));

    uint8_t test_0x1F[32] = {0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x1F), 32);
    EXPECT_EQ(31, s.shard_for(h));

    uint8_t test_0x20[32] = {0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x20), 32);
    EXPECT_EQ(32, s.shard_for(h));

    uint8_t test_0x21[32] = {0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x21), 32);
    EXPECT_EQ(33, s.shard_for(h));

    uint8_t test_0x22[32] = {0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x22), 32);
    EXPECT_EQ(34, s.shard_for(h));

    uint8_t test_0x23[32] = {0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x23), 32);
    EXPECT_EQ(35, s.shard_for(h));

    uint8_t test_0x24[32] = {0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x24), 32);
    EXPECT_EQ(36, s.shard_for(h));

    uint8_t test_0x25[32] = {0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x25), 32);
    EXPECT_EQ(37, s.shard_for(h));

    uint8_t test_0x26[32] = {0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x26), 32);
    EXPECT_EQ(38, s.shard_for(h));

    uint8_t test_0x27[32] = {0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x27), 32);
    EXPECT_EQ(39, s.shard_for(h));

    uint8_t test_0x28[32] = {0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x28), 32);
    EXPECT_EQ(40, s.shard_for(h));

    uint8_t test_0x29[32] = {0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x29), 32);
    EXPECT_EQ(41, s.shard_for(h));

    uint8_t test_0x2A[32] = {0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x2A), 32);
    EXPECT_EQ(42, s.shard_for(h));

    uint8_t test_0x2B[32] = {0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x2B), 32);
    EXPECT_EQ(43, s.shard_for(h));

    uint8_t test_0x2C[32] = {0x2C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x2C), 32);
    EXPECT_EQ(44, s.shard_for(h));

    uint8_t test_0x2D[32] = {0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x2D), 32);
    EXPECT_EQ(45, s.shard_for(h));

    uint8_t test_0x2E[32] = {0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x2E), 32);
    EXPECT_EQ(46, s.shard_for(h));

    uint8_t test_0x2F[32] = {0x2F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x2F), 32);
    EXPECT_EQ(47, s.shard_for(h));

    uint8_t test_0x30[32] = {0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x30), 32);
    EXPECT_EQ(48, s.shard_for(h));

    uint8_t test_0x31[32] = {0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x31), 32);
    EXPECT_EQ(49, s.shard_for(h));

    uint8_t test_0x32[32] = {0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x32), 32);
    EXPECT_EQ(50, s.shard_for(h));

    uint8_t test_0x33[32] = {0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x33), 32);
    EXPECT_EQ(51, s.shard_for(h));

    uint8_t test_0x34[32] = {0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x34), 32);
    EXPECT_EQ(52, s.shard_for(h));

    uint8_t test_0x35[32] = {0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x35), 32);
    EXPECT_EQ(53, s.shard_for(h));

    uint8_t test_0x36[32] = {0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x36), 32);
    EXPECT_EQ(54, s.shard_for(h));

    uint8_t test_0x37[32] = {0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x37), 32);
    EXPECT_EQ(55, s.shard_for(h));

    uint8_t test_0x38[32] = {0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x38), 32);
    EXPECT_EQ(56, s.shard_for(h));

    uint8_t test_0x39[32] = {0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x39), 32);
    EXPECT_EQ(57, s.shard_for(h));

    uint8_t test_0x3A[32] = {0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x3A), 32);
    EXPECT_EQ(58, s.shard_for(h));

    uint8_t test_0x3B[32] = {0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x3B), 32);
    EXPECT_EQ(59, s.shard_for(h));

    uint8_t test_0x3C[32] = {0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x3C), 32);
    EXPECT_EQ(60, s.shard_for(h));

    uint8_t test_0x3D[32] = {0x3D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x3D), 32);
    EXPECT_EQ(61, s.shard_for(h));

    uint8_t test_0x3E[32] = {0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x3E), 32);
    EXPECT_EQ(62, s.shard_for(h));

    uint8_t test_0x3F[32] = {0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x3F), 32);
    EXPECT_EQ(63, s.shard_for(h));

    uint8_t test_0x40[32] = {0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x40), 32);
    EXPECT_EQ(64, s.shard_for(h));

    uint8_t test_0x41[32] = {0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x41), 32);
    EXPECT_EQ(65, s.shard_for(h));

    uint8_t test_0x42[32] = {0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x42), 32);
    EXPECT_EQ(66, s.shard_for(h));

    uint8_t test_0x43[32] = {0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x43), 32);
    EXPECT_EQ(67, s.shard_for(h));

    uint8_t test_0x44[32] = {0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x44), 32);
    EXPECT_EQ(68, s.shard_for(h));

    uint8_t test_0x45[32] = {0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x45), 32);
    EXPECT_EQ(69, s.shard_for(h));

    uint8_t test_0x46[32] = {0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x46), 32);
    EXPECT_EQ(70, s.shard_for(h));

    uint8_t test_0x47[32] = {0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x47), 32);
    EXPECT_EQ(71, s.shard_for(h));

    uint8_t test_0x48[32] = {0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x48), 32);
    EXPECT_EQ(72, s.shard_for(h));

    uint8_t test_0x49[32] = {0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x49), 32);
    EXPECT_EQ(73, s.shard_for(h));

    uint8_t test_0x4A[32] = {0x4A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x4A), 32);
    EXPECT_EQ(74, s.shard_for(h));

    uint8_t test_0x4B[32] = {0x4B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x4B), 32);
    EXPECT_EQ(75, s.shard_for(h));

    uint8_t test_0x4C[32] = {0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x4C), 32);
    EXPECT_EQ(76, s.shard_for(h));

    uint8_t test_0x4D[32] = {0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x4D), 32);
    EXPECT_EQ(77, s.shard_for(h));

    uint8_t test_0x4E[32] = {0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x4E), 32);
    EXPECT_EQ(78, s.shard_for(h));

    uint8_t test_0x4F[32] = {0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x4F), 32);
    EXPECT_EQ(79, s.shard_for(h));

    uint8_t test_0x50[32] = {0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x50), 32);
    EXPECT_EQ(80, s.shard_for(h));

    uint8_t test_0x51[32] = {0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x51), 32);
    EXPECT_EQ(81, s.shard_for(h));

    uint8_t test_0x52[32] = {0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x52), 32);
    EXPECT_EQ(82, s.shard_for(h));

    uint8_t test_0x53[32] = {0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x53), 32);
    EXPECT_EQ(83, s.shard_for(h));

    uint8_t test_0x54[32] = {0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x54), 32);
    EXPECT_EQ(84, s.shard_for(h));

    uint8_t test_0x55[32] = {0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x55), 32);
    EXPECT_EQ(85, s.shard_for(h));

    uint8_t test_0x56[32] = {0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x56), 32);
    EXPECT_EQ(86, s.shard_for(h));

    uint8_t test_0x57[32] = {0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x57), 32);
    EXPECT_EQ(87, s.shard_for(h));

    uint8_t test_0x58[32] = {0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x58), 32);
    EXPECT_EQ(88, s.shard_for(h));

    uint8_t test_0x59[32] = {0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x59), 32);
    EXPECT_EQ(89, s.shard_for(h));

    uint8_t test_0x5A[32] = {0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x5A), 32);
    EXPECT_EQ(90, s.shard_for(h));

    uint8_t test_0x5B[32] = {0x5B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x5B), 32);
    EXPECT_EQ(91, s.shard_for(h));

    uint8_t test_0x5C[32] = {0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x5C), 32);
    EXPECT_EQ(92, s.shard_for(h));

    uint8_t test_0x5D[32] = {0x5D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x5D), 32);
    EXPECT_EQ(93, s.shard_for(h));

    uint8_t test_0x5E[32] = {0x5E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x5E), 32);
    EXPECT_EQ(94, s.shard_for(h));

    uint8_t test_0x5F[32] = {0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x5F), 32);
    EXPECT_EQ(95, s.shard_for(h));

    uint8_t test_0x60[32] = {0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x60), 32);
    EXPECT_EQ(96, s.shard_for(h));

    uint8_t test_0x61[32] = {0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x61), 32);
    EXPECT_EQ(97, s.shard_for(h));

    uint8_t test_0x62[32] = {0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x62), 32);
    EXPECT_EQ(98, s.shard_for(h));

    uint8_t test_0x63[32] = {0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x63), 32);
    EXPECT_EQ(99, s.shard_for(h));

    uint8_t test_0x64[32] = {0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x64), 32);
    EXPECT_EQ(100, s.shard_for(h));

    uint8_t test_0x65[32] = {0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x65), 32);
    EXPECT_EQ(101, s.shard_for(h));

    uint8_t test_0x66[32] = {0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x66), 32);
    EXPECT_EQ(102, s.shard_for(h));

    uint8_t test_0x67[32] = {0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x67), 32);
    EXPECT_EQ(103, s.shard_for(h));

    uint8_t test_0x68[32] = {0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x68), 32);
    EXPECT_EQ(104, s.shard_for(h));

    uint8_t test_0x69[32] = {0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x69), 32);
    EXPECT_EQ(105, s.shard_for(h));

    uint8_t test_0x6A[32] = {0x6A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x6A), 32);
    EXPECT_EQ(106, s.shard_for(h));

    uint8_t test_0x6B[32] = {0x6B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x6B), 32);
    EXPECT_EQ(107, s.shard_for(h));

    uint8_t test_0x6C[32] = {0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x6C), 32);
    EXPECT_EQ(108, s.shard_for(h));

    uint8_t test_0x6D[32] = {0x6D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x6D), 32);
    EXPECT_EQ(109, s.shard_for(h));

    uint8_t test_0x6E[32] = {0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x6E), 32);
    EXPECT_EQ(110, s.shard_for(h));

    uint8_t test_0x6F[32] = {0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x6F), 32);
    EXPECT_EQ(111, s.shard_for(h));

    uint8_t test_0x70[32] = {0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x70), 32);
    EXPECT_EQ(112, s.shard_for(h));

    uint8_t test_0x71[32] = {0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x71), 32);
    EXPECT_EQ(113, s.shard_for(h));

    uint8_t test_0x72[32] = {0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x72), 32);
    EXPECT_EQ(114, s.shard_for(h));

    uint8_t test_0x73[32] = {0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x73), 32);
    EXPECT_EQ(115, s.shard_for(h));

    uint8_t test_0x74[32] = {0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x74), 32);
    EXPECT_EQ(116, s.shard_for(h));

    uint8_t test_0x75[32] = {0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x75), 32);
    EXPECT_EQ(117, s.shard_for(h));

    uint8_t test_0x76[32] = {0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x76), 32);
    EXPECT_EQ(118, s.shard_for(h));

    uint8_t test_0x77[32] = {0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x77), 32);
    EXPECT_EQ(119, s.shard_for(h));

    uint8_t test_0x78[32] = {0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x78), 32);
    EXPECT_EQ(120, s.shard_for(h));

    uint8_t test_0x79[32] = {0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x79), 32);
    EXPECT_EQ(121, s.shard_for(h));

    uint8_t test_0x7A[32] = {0x7A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x7A), 32);
    EXPECT_EQ(122, s.shard_for(h));

    uint8_t test_0x7B[32] = {0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x7B), 32);
    EXPECT_EQ(123, s.shard_for(h));

    uint8_t test_0x7C[32] = {0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x7C), 32);
    EXPECT_EQ(124, s.shard_for(h));

    uint8_t test_0x7D[32] = {0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x7D), 32);
    EXPECT_EQ(125, s.shard_for(h));

    uint8_t test_0x7E[32] = {0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x7E), 32);
    EXPECT_EQ(126, s.shard_for(h));

    uint8_t test_0x7F[32] = {0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x7F), 32);
    EXPECT_EQ(127, s.shard_for(h));

    uint8_t test_0x80[32] = {0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x80), 32);
    EXPECT_EQ(128, s.shard_for(h));

    uint8_t test_0x81[32] = {0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x81), 32);
    EXPECT_EQ(129, s.shard_for(h));

    uint8_t test_0x82[32] = {0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x82), 32);
    EXPECT_EQ(130, s.shard_for(h));

    uint8_t test_0x83[32] = {0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x83), 32);
    EXPECT_EQ(131, s.shard_for(h));

    uint8_t test_0x84[32] = {0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x84), 32);
    EXPECT_EQ(132, s.shard_for(h));

    uint8_t test_0x85[32] = {0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x85), 32);
    EXPECT_EQ(133, s.shard_for(h));

    uint8_t test_0x86[32] = {0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x86), 32);
    EXPECT_EQ(134, s.shard_for(h));

    uint8_t test_0x87[32] = {0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x87), 32);
    EXPECT_EQ(135, s.shard_for(h));

    uint8_t test_0x88[32] = {0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x88), 32);
    EXPECT_EQ(136, s.shard_for(h));

    uint8_t test_0x89[32] = {0x89, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x89), 32);
    EXPECT_EQ(137, s.shard_for(h));

    uint8_t test_0x8A[32] = {0x8A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x8A), 32);
    EXPECT_EQ(138, s.shard_for(h));

    uint8_t test_0x8B[32] = {0x8B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x8B), 32);
    EXPECT_EQ(139, s.shard_for(h));

    uint8_t test_0x8C[32] = {0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x8C), 32);
    EXPECT_EQ(140, s.shard_for(h));

    uint8_t test_0x8D[32] = {0x8D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x8D), 32);
    EXPECT_EQ(141, s.shard_for(h));

    uint8_t test_0x8E[32] = {0x8E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x8E), 32);
    EXPECT_EQ(142, s.shard_for(h));

    uint8_t test_0x8F[32] = {0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x8F), 32);
    EXPECT_EQ(143, s.shard_for(h));

    uint8_t test_0x90[32] = {0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x90), 32);
    EXPECT_EQ(144, s.shard_for(h));

    uint8_t test_0x91[32] = {0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x91), 32);
    EXPECT_EQ(145, s.shard_for(h));

    uint8_t test_0x92[32] = {0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x92), 32);
    EXPECT_EQ(146, s.shard_for(h));

    uint8_t test_0x93[32] = {0x93, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x93), 32);
    EXPECT_EQ(147, s.shard_for(h));

    uint8_t test_0x94[32] = {0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x94), 32);
    EXPECT_EQ(148, s.shard_for(h));

    uint8_t test_0x95[32] = {0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x95), 32);
    EXPECT_EQ(149, s.shard_for(h));

    uint8_t test_0x96[32] = {0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x96), 32);
    EXPECT_EQ(150, s.shard_for(h));

    uint8_t test_0x97[32] = {0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x97), 32);
    EXPECT_EQ(151, s.shard_for(h));

    uint8_t test_0x98[32] = {0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x98), 32);
    EXPECT_EQ(152, s.shard_for(h));

    uint8_t test_0x99[32] = {0x99, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x99), 32);
    EXPECT_EQ(153, s.shard_for(h));

    uint8_t test_0x9A[32] = {0x9A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x9A), 32);
    EXPECT_EQ(154, s.shard_for(h));

    uint8_t test_0x9B[32] = {0x9B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x9B), 32);
    EXPECT_EQ(155, s.shard_for(h));

    uint8_t test_0x9C[32] = {0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x9C), 32);
    EXPECT_EQ(156, s.shard_for(h));

    uint8_t test_0x9D[32] = {0x9D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x9D), 32);
    EXPECT_EQ(157, s.shard_for(h));

    uint8_t test_0x9E[32] = {0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x9E), 32);
    EXPECT_EQ(158, s.shard_for(h));

    uint8_t test_0x9F[32] = {0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0x9F), 32);
    EXPECT_EQ(159, s.shard_for(h));

    uint8_t test_0xA0[32] = {0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA0), 32);
    EXPECT_EQ(160, s.shard_for(h));

    uint8_t test_0xA1[32] = {0xA1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA1), 32);
    EXPECT_EQ(161, s.shard_for(h));

    uint8_t test_0xA2[32] = {0xA2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA2), 32);
    EXPECT_EQ(162, s.shard_for(h));

    uint8_t test_0xA3[32] = {0xA3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA3), 32);
    EXPECT_EQ(163, s.shard_for(h));

    uint8_t test_0xA4[32] = {0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA4), 32);
    EXPECT_EQ(164, s.shard_for(h));

    uint8_t test_0xA5[32] = {0xA5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA5), 32);
    EXPECT_EQ(165, s.shard_for(h));

    uint8_t test_0xA6[32] = {0xA6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA6), 32);
    EXPECT_EQ(166, s.shard_for(h));

    uint8_t test_0xA7[32] = {0xA7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA7), 32);
    EXPECT_EQ(167, s.shard_for(h));

    uint8_t test_0xA8[32] = {0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA8), 32);
    EXPECT_EQ(168, s.shard_for(h));

    uint8_t test_0xA9[32] = {0xA9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xA9), 32);
    EXPECT_EQ(169, s.shard_for(h));

    uint8_t test_0xAA[32] = {0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xAA), 32);
    EXPECT_EQ(170, s.shard_for(h));

    uint8_t test_0xAB[32] = {0xAB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xAB), 32);
    EXPECT_EQ(171, s.shard_for(h));

    uint8_t test_0xAC[32] = {0xAC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xAC), 32);
    EXPECT_EQ(172, s.shard_for(h));

    uint8_t test_0xAD[32] = {0xAD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xAD), 32);
    EXPECT_EQ(173, s.shard_for(h));

    uint8_t test_0xAE[32] = {0xAE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xAE), 32);
    EXPECT_EQ(174, s.shard_for(h));

    uint8_t test_0xAF[32] = {0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xAF), 32);
    EXPECT_EQ(175, s.shard_for(h));

    uint8_t test_0xB0[32] = {0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB0), 32);
    EXPECT_EQ(176, s.shard_for(h));

    uint8_t test_0xB1[32] = {0xB1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB1), 32);
    EXPECT_EQ(177, s.shard_for(h));

    uint8_t test_0xB2[32] = {0xB2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB2), 32);
    EXPECT_EQ(178, s.shard_for(h));

    uint8_t test_0xB3[32] = {0xB3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB3), 32);
    EXPECT_EQ(179, s.shard_for(h));

    uint8_t test_0xB4[32] = {0xB4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB4), 32);
    EXPECT_EQ(180, s.shard_for(h));

    uint8_t test_0xB5[32] = {0xB5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB5), 32);
    EXPECT_EQ(181, s.shard_for(h));

    uint8_t test_0xB6[32] = {0xB6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB6), 32);
    EXPECT_EQ(182, s.shard_for(h));

    uint8_t test_0xB7[32] = {0xB7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB7), 32);
    EXPECT_EQ(183, s.shard_for(h));

    uint8_t test_0xB8[32] = {0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB8), 32);
    EXPECT_EQ(184, s.shard_for(h));

    uint8_t test_0xB9[32] = {0xB9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xB9), 32);
    EXPECT_EQ(185, s.shard_for(h));

    uint8_t test_0xBA[32] = {0xBA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xBA), 32);
    EXPECT_EQ(186, s.shard_for(h));

    uint8_t test_0xBB[32] = {0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xBB), 32);
    EXPECT_EQ(187, s.shard_for(h));

    uint8_t test_0xBC[32] = {0xBC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xBC), 32);
    EXPECT_EQ(188, s.shard_for(h));

    uint8_t test_0xBD[32] = {0xBD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xBD), 32);
    EXPECT_EQ(189, s.shard_for(h));

    uint8_t test_0xBE[32] = {0xBE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xBE), 32);
    EXPECT_EQ(190, s.shard_for(h));

    uint8_t test_0xBF[32] = {0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xBF), 32);
    EXPECT_EQ(191, s.shard_for(h));

    uint8_t test_0xC0[32] = {0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC0), 32);
    EXPECT_EQ(192, s.shard_for(h));

    uint8_t test_0xC1[32] = {0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC1), 32);
    EXPECT_EQ(193, s.shard_for(h));

    uint8_t test_0xC2[32] = {0xC2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC2), 32);
    EXPECT_EQ(194, s.shard_for(h));

    uint8_t test_0xC3[32] = {0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC3), 32);
    EXPECT_EQ(195, s.shard_for(h));

    uint8_t test_0xC4[32] = {0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC4), 32);
    EXPECT_EQ(196, s.shard_for(h));

    uint8_t test_0xC5[32] = {0xC5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC5), 32);
    EXPECT_EQ(197, s.shard_for(h));

    uint8_t test_0xC6[32] = {0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC6), 32);
    EXPECT_EQ(198, s.shard_for(h));

    uint8_t test_0xC7[32] = {0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC7), 32);
    EXPECT_EQ(199, s.shard_for(h));

    uint8_t test_0xC8[32] = {0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC8), 32);
    EXPECT_EQ(200, s.shard_for(h));

    uint8_t test_0xC9[32] = {0xC9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xC9), 32);
    EXPECT_EQ(201, s.shard_for(h));

    uint8_t test_0xCA[32] = {0xCA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xCA), 32);
    EXPECT_EQ(202, s.shard_for(h));

    uint8_t test_0xCB[32] = {0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xCB), 32);
    EXPECT_EQ(203, s.shard_for(h));

    uint8_t test_0xCC[32] = {0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xCC), 32);
    EXPECT_EQ(204, s.shard_for(h));

    uint8_t test_0xCD[32] = {0xCD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xCD), 32);
    EXPECT_EQ(205, s.shard_for(h));

    uint8_t test_0xCE[32] = {0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xCE), 32);
    EXPECT_EQ(206, s.shard_for(h));

    uint8_t test_0xCF[32] = {0xCF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xCF), 32);
    EXPECT_EQ(207, s.shard_for(h));

    uint8_t test_0xD0[32] = {0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD0), 32);
    EXPECT_EQ(208, s.shard_for(h));

    uint8_t test_0xD1[32] = {0xD1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD1), 32);
    EXPECT_EQ(209, s.shard_for(h));

    uint8_t test_0xD2[32] = {0xD2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD2), 32);
    EXPECT_EQ(210, s.shard_for(h));

    uint8_t test_0xD3[32] = {0xD3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD3), 32);
    EXPECT_EQ(211, s.shard_for(h));

    uint8_t test_0xD4[32] = {0xD4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD4), 32);
    EXPECT_EQ(212, s.shard_for(h));

    uint8_t test_0xD5[32] = {0xD5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD5), 32);
    EXPECT_EQ(213, s.shard_for(h));

    uint8_t test_0xD6[32] = {0xD6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD6), 32);
    EXPECT_EQ(214, s.shard_for(h));

    uint8_t test_0xD7[32] = {0xD7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD7), 32);
    EXPECT_EQ(215, s.shard_for(h));

    uint8_t test_0xD8[32] = {0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD8), 32);
    EXPECT_EQ(216, s.shard_for(h));

    uint8_t test_0xD9[32] = {0xD9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xD9), 32);
    EXPECT_EQ(217, s.shard_for(h));

    uint8_t test_0xDA[32] = {0xDA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xDA), 32);
    EXPECT_EQ(218, s.shard_for(h));

    uint8_t test_0xDB[32] = {0xDB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xDB), 32);
    EXPECT_EQ(219, s.shard_for(h));

    uint8_t test_0xDC[32] = {0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xDC), 32);
    EXPECT_EQ(220, s.shard_for(h));

    uint8_t test_0xDD[32] = {0xDD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xDD), 32);
    EXPECT_EQ(221, s.shard_for(h));

    uint8_t test_0xDE[32] = {0xDE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xDE), 32);
    EXPECT_EQ(222, s.shard_for(h));

    uint8_t test_0xDF[32] = {0xDF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xDF), 32);
    EXPECT_EQ(223, s.shard_for(h));

    uint8_t test_0xE0[32] = {0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE0), 32);
    EXPECT_EQ(224, s.shard_for(h));

    uint8_t test_0xE1[32] = {0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE1), 32);
    EXPECT_EQ(225, s.shard_for(h));

    uint8_t test_0xE2[32] = {0xE2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE2), 32);
    EXPECT_EQ(226, s.shard_for(h));

    uint8_t test_0xE3[32] = {0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE3), 32);
    EXPECT_EQ(227, s.shard_for(h));

    uint8_t test_0xE4[32] = {0xE4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE4), 32);
    EXPECT_EQ(228, s.shard_for(h));

    uint8_t test_0xE5[32] = {0xE5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE5), 32);
    EXPECT_EQ(229, s.shard_for(h));

    uint8_t test_0xE6[32] = {0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE6), 32);
    EXPECT_EQ(230, s.shard_for(h));

    uint8_t test_0xE7[32] = {0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE7), 32);
    EXPECT_EQ(231, s.shard_for(h));

    uint8_t test_0xE8[32] = {0xE8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE8), 32);
    EXPECT_EQ(232, s.shard_for(h));

    uint8_t test_0xE9[32] = {0xE9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xE9), 32);
    EXPECT_EQ(233, s.shard_for(h));

    uint8_t test_0xEA[32] = {0xEA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xEA), 32);
    EXPECT_EQ(234, s.shard_for(h));

    uint8_t test_0xEB[32] = {0xEB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xEB), 32);
    EXPECT_EQ(235, s.shard_for(h));

    uint8_t test_0xEC[32] = {0xEC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xEC), 32);
    EXPECT_EQ(236, s.shard_for(h));

    uint8_t test_0xED[32] = {0xED, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xED), 32);
    EXPECT_EQ(237, s.shard_for(h));

    uint8_t test_0xEE[32] = {0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xEE), 32);
    EXPECT_EQ(238, s.shard_for(h));

    uint8_t test_0xEF[32] = {0xEF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xEF), 32);
    EXPECT_EQ(239, s.shard_for(h));

    uint8_t test_0xF0[32] = {0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF0), 32);
    EXPECT_EQ(240, s.shard_for(h));

    uint8_t test_0xF1[32] = {0xF1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF1), 32);
    EXPECT_EQ(241, s.shard_for(h));

    uint8_t test_0xF2[32] = {0xF2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF2), 32);
    EXPECT_EQ(242, s.shard_for(h));

    uint8_t test_0xF3[32] = {0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF3), 32);
    EXPECT_EQ(243, s.shard_for(h));

    uint8_t test_0xF4[32] = {0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF4), 32);
    EXPECT_EQ(244, s.shard_for(h));

    uint8_t test_0xF5[32] = {0xF5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF5), 32);
    EXPECT_EQ(245, s.shard_for(h));

    uint8_t test_0xF6[32] = {0xF6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF6), 32);
    EXPECT_EQ(246, s.shard_for(h));

    uint8_t test_0xF7[32] = {0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF7), 32);
    EXPECT_EQ(247, s.shard_for(h));

    uint8_t test_0xF8[32] = {0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF8), 32);
    EXPECT_EQ(248, s.shard_for(h));

    uint8_t test_0xF9[32] = {0xF9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xF9), 32);
    EXPECT_EQ(249, s.shard_for(h));

    uint8_t test_0xFA[32] = {0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xFA), 32);
    EXPECT_EQ(250, s.shard_for(h));

    uint8_t test_0xFB[32] = {0xFB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xFB), 32);
    EXPECT_EQ(251, s.shard_for(h));

    uint8_t test_0xFC[32] = {0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xFC), 32);
    EXPECT_EQ(252, s.shard_for(h));

    uint8_t test_0xFD[32] = {0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xFD), 32);
    EXPECT_EQ(253, s.shard_for(h));

    uint8_t test_0xFE[32] = {0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xFE), 32);
    EXPECT_EQ(254, s.shard_for(h));

    uint8_t test_0xFF[32] = {0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    h.hash = std::string(reinterpret_cast<const char*>(test_0xFF), 32);
    EXPECT_EQ(255, s.shard_for(h));
}

TEST(CertificateSharderTest, FirstOf) {
    CertificateSharder s;
    for (size_t i = 0; i < s.total_shards(); ++i) {
        HashKey h = s.first_of(i);
        ASSERT_EQ(32, h.hash.size());
        EXPECT_EQ(static_cast<uint8_t>(h.hash[0]), i);
    }
}

}  // namespace zdb
